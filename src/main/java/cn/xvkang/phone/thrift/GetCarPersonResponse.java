/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package cn.xvkang.phone.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2019-08-01")
public class GetCarPersonResponse implements org.apache.thrift.TBase<GetCarPersonResponse, GetCarPersonResponse._Fields>, java.io.Serializable, Cloneable, Comparable<GetCarPersonResponse> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetCarPersonResponse");

  private static final org.apache.thrift.protocol.TField CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("code", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField CAR_PERSONS_FIELD_DESC = new org.apache.thrift.protocol.TField("carPersons", org.apache.thrift.protocol.TType.LIST, (short)2);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetCarPersonResponseStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetCarPersonResponseTupleSchemeFactory();

  /**
   * 
   * @see Result_Code
   */
  public Result_Code code; // optional
  public java.util.List<GetCarPersonPojo> carPersons; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see Result_Code
     */
    CODE((short)1, "code"),
    CAR_PERSONS((short)2, "carPersons");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CODE
          return CODE;
        case 2: // CAR_PERSONS
          return CAR_PERSONS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.CODE,_Fields.CAR_PERSONS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CODE, new org.apache.thrift.meta_data.FieldMetaData("code", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, Result_Code.class)));
    tmpMap.put(_Fields.CAR_PERSONS, new org.apache.thrift.meta_data.FieldMetaData("carPersons", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, GetCarPersonPojo.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetCarPersonResponse.class, metaDataMap);
  }

  public GetCarPersonResponse() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public GetCarPersonResponse(GetCarPersonResponse other) {
    if (other.isSetCode()) {
      this.code = other.code;
    }
    if (other.isSetCarPersons()) {
      java.util.List<GetCarPersonPojo> __this__carPersons = new java.util.ArrayList<GetCarPersonPojo>(other.carPersons.size());
      for (GetCarPersonPojo other_element : other.carPersons) {
        __this__carPersons.add(new GetCarPersonPojo(other_element));
      }
      this.carPersons = __this__carPersons;
    }
  }

  public GetCarPersonResponse deepCopy() {
    return new GetCarPersonResponse(this);
  }

  @Override
  public void clear() {
    this.code = null;
    this.carPersons = null;
  }

  /**
   * 
   * @see Result_Code
   */
  public Result_Code getCode() {
    return this.code;
  }

  /**
   * 
   * @see Result_Code
   */
  public GetCarPersonResponse setCode(Result_Code code) {
    this.code = code;
    return this;
  }

  public void unsetCode() {
    this.code = null;
  }

  /** Returns true if field code is set (has been assigned a value) and false otherwise */
  public boolean isSetCode() {
    return this.code != null;
  }

  public void setCodeIsSet(boolean value) {
    if (!value) {
      this.code = null;
    }
  }

  public int getCarPersonsSize() {
    return (this.carPersons == null) ? 0 : this.carPersons.size();
  }

  public java.util.Iterator<GetCarPersonPojo> getCarPersonsIterator() {
    return (this.carPersons == null) ? null : this.carPersons.iterator();
  }

  public void addToCarPersons(GetCarPersonPojo elem) {
    if (this.carPersons == null) {
      this.carPersons = new java.util.ArrayList<GetCarPersonPojo>();
    }
    this.carPersons.add(elem);
  }

  public java.util.List<GetCarPersonPojo> getCarPersons() {
    return this.carPersons;
  }

  public GetCarPersonResponse setCarPersons(java.util.List<GetCarPersonPojo> carPersons) {
    this.carPersons = carPersons;
    return this;
  }

  public void unsetCarPersons() {
    this.carPersons = null;
  }

  /** Returns true if field carPersons is set (has been assigned a value) and false otherwise */
  public boolean isSetCarPersons() {
    return this.carPersons != null;
  }

  public void setCarPersonsIsSet(boolean value) {
    if (!value) {
      this.carPersons = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case CODE:
      if (value == null) {
        unsetCode();
      } else {
        setCode((Result_Code)value);
      }
      break;

    case CAR_PERSONS:
      if (value == null) {
        unsetCarPersons();
      } else {
        setCarPersons((java.util.List<GetCarPersonPojo>)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case CODE:
      return getCode();

    case CAR_PERSONS:
      return getCarPersons();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case CODE:
      return isSetCode();
    case CAR_PERSONS:
      return isSetCarPersons();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof GetCarPersonResponse)
      return this.equals((GetCarPersonResponse)that);
    return false;
  }

  public boolean equals(GetCarPersonResponse that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_code = true && this.isSetCode();
    boolean that_present_code = true && that.isSetCode();
    if (this_present_code || that_present_code) {
      if (!(this_present_code && that_present_code))
        return false;
      if (!this.code.equals(that.code))
        return false;
    }

    boolean this_present_carPersons = true && this.isSetCarPersons();
    boolean that_present_carPersons = true && that.isSetCarPersons();
    if (this_present_carPersons || that_present_carPersons) {
      if (!(this_present_carPersons && that_present_carPersons))
        return false;
      if (!this.carPersons.equals(that.carPersons))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetCode()) ? 131071 : 524287);
    if (isSetCode())
      hashCode = hashCode * 8191 + code.getValue();

    hashCode = hashCode * 8191 + ((isSetCarPersons()) ? 131071 : 524287);
    if (isSetCarPersons())
      hashCode = hashCode * 8191 + carPersons.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(GetCarPersonResponse other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetCode()).compareTo(other.isSetCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.code, other.code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCarPersons()).compareTo(other.isSetCarPersons());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCarPersons()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.carPersons, other.carPersons);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("GetCarPersonResponse(");
    boolean first = true;

    if (isSetCode()) {
      sb.append("code:");
      if (this.code == null) {
        sb.append("null");
      } else {
        sb.append(this.code);
      }
      first = false;
    }
    if (isSetCarPersons()) {
      if (!first) sb.append(", ");
      sb.append("carPersons:");
      if (this.carPersons == null) {
        sb.append("null");
      } else {
        sb.append(this.carPersons);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class GetCarPersonResponseStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public GetCarPersonResponseStandardScheme getScheme() {
      return new GetCarPersonResponseStandardScheme();
    }
  }

  private static class GetCarPersonResponseStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetCarPersonResponse> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, GetCarPersonResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.code = cn.xvkang.phone.thrift.Result_Code.findByValue(iprot.readI32());
              struct.setCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CAR_PERSONS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list16 = iprot.readListBegin();
                struct.carPersons = new java.util.ArrayList<GetCarPersonPojo>(_list16.size);
                GetCarPersonPojo _elem17;
                for (int _i18 = 0; _i18 < _list16.size; ++_i18)
                {
                  _elem17 = new GetCarPersonPojo();
                  _elem17.read(iprot);
                  struct.carPersons.add(_elem17);
                }
                iprot.readListEnd();
              }
              struct.setCarPersonsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, GetCarPersonResponse struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.code != null) {
        if (struct.isSetCode()) {
          oprot.writeFieldBegin(CODE_FIELD_DESC);
          oprot.writeI32(struct.code.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.carPersons != null) {
        if (struct.isSetCarPersons()) {
          oprot.writeFieldBegin(CAR_PERSONS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.carPersons.size()));
            for (GetCarPersonPojo _iter19 : struct.carPersons)
            {
              _iter19.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class GetCarPersonResponseTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public GetCarPersonResponseTupleScheme getScheme() {
      return new GetCarPersonResponseTupleScheme();
    }
  }

  private static class GetCarPersonResponseTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetCarPersonResponse> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, GetCarPersonResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetCode()) {
        optionals.set(0);
      }
      if (struct.isSetCarPersons()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetCode()) {
        oprot.writeI32(struct.code.getValue());
      }
      if (struct.isSetCarPersons()) {
        {
          oprot.writeI32(struct.carPersons.size());
          for (GetCarPersonPojo _iter20 : struct.carPersons)
          {
            _iter20.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, GetCarPersonResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.code = cn.xvkang.phone.thrift.Result_Code.findByValue(iprot.readI32());
        struct.setCodeIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list21 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.carPersons = new java.util.ArrayList<GetCarPersonPojo>(_list21.size);
          GetCarPersonPojo _elem22;
          for (int _i23 = 0; _i23 < _list21.size; ++_i23)
          {
            _elem22 = new GetCarPersonPojo();
            _elem22.read(iprot);
            struct.carPersons.add(_elem22);
          }
        }
        struct.setCarPersonsIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

