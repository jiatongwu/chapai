/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package cn.xvkang.phone.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2019-08-01")
public class Weiguijilu implements org.apache.thrift.TBase<Weiguijilu, Weiguijilu._Fields>, java.io.Serializable, Cloneable, Comparable<Weiguijilu> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Weiguijilu");

  private static final org.apache.thrift.protocol.TField CREATETIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createtime", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField PERSON_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("personName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CPH_FIELD_DESC = new org.apache.thrift.protocol.TField("cph", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField BASE64IMAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("base64image", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new WeiguijiluStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new WeiguijiluTupleSchemeFactory();

  public java.lang.String createtime; // optional
  public java.lang.String personName; // optional
  public java.lang.String cph; // optional
  public java.lang.String base64image; // optional
  public int id; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    CREATETIME((short)1, "createtime"),
    PERSON_NAME((short)2, "personName"),
    CPH((short)3, "cph"),
    BASE64IMAGE((short)4, "base64image"),
    ID((short)5, "id");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CREATETIME
          return CREATETIME;
        case 2: // PERSON_NAME
          return PERSON_NAME;
        case 3: // CPH
          return CPH;
        case 4: // BASE64IMAGE
          return BASE64IMAGE;
        case 5: // ID
          return ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.CREATETIME,_Fields.PERSON_NAME,_Fields.CPH,_Fields.BASE64IMAGE,_Fields.ID};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CREATETIME, new org.apache.thrift.meta_data.FieldMetaData("createtime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "String")));
    tmpMap.put(_Fields.PERSON_NAME, new org.apache.thrift.meta_data.FieldMetaData("personName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "String")));
    tmpMap.put(_Fields.CPH, new org.apache.thrift.meta_data.FieldMetaData("cph", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "String")));
    tmpMap.put(_Fields.BASE64IMAGE, new org.apache.thrift.meta_data.FieldMetaData("base64image", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "String")));
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "int")));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Weiguijilu.class, metaDataMap);
  }

  public Weiguijilu() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Weiguijilu(Weiguijilu other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetCreatetime()) {
      this.createtime = other.createtime;
    }
    if (other.isSetPersonName()) {
      this.personName = other.personName;
    }
    if (other.isSetCph()) {
      this.cph = other.cph;
    }
    if (other.isSetBase64image()) {
      this.base64image = other.base64image;
    }
    this.id = other.id;
  }

  public Weiguijilu deepCopy() {
    return new Weiguijilu(this);
  }

  @Override
  public void clear() {
    this.createtime = null;
    this.personName = null;
    this.cph = null;
    this.base64image = null;
    setIdIsSet(false);
    this.id = 0;
  }

  public java.lang.String getCreatetime() {
    return this.createtime;
  }

  public Weiguijilu setCreatetime(java.lang.String createtime) {
    this.createtime = createtime;
    return this;
  }

  public void unsetCreatetime() {
    this.createtime = null;
  }

  /** Returns true if field createtime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreatetime() {
    return this.createtime != null;
  }

  public void setCreatetimeIsSet(boolean value) {
    if (!value) {
      this.createtime = null;
    }
  }

  public java.lang.String getPersonName() {
    return this.personName;
  }

  public Weiguijilu setPersonName(java.lang.String personName) {
    this.personName = personName;
    return this;
  }

  public void unsetPersonName() {
    this.personName = null;
  }

  /** Returns true if field personName is set (has been assigned a value) and false otherwise */
  public boolean isSetPersonName() {
    return this.personName != null;
  }

  public void setPersonNameIsSet(boolean value) {
    if (!value) {
      this.personName = null;
    }
  }

  public java.lang.String getCph() {
    return this.cph;
  }

  public Weiguijilu setCph(java.lang.String cph) {
    this.cph = cph;
    return this;
  }

  public void unsetCph() {
    this.cph = null;
  }

  /** Returns true if field cph is set (has been assigned a value) and false otherwise */
  public boolean isSetCph() {
    return this.cph != null;
  }

  public void setCphIsSet(boolean value) {
    if (!value) {
      this.cph = null;
    }
  }

  public java.lang.String getBase64image() {
    return this.base64image;
  }

  public Weiguijilu setBase64image(java.lang.String base64image) {
    this.base64image = base64image;
    return this;
  }

  public void unsetBase64image() {
    this.base64image = null;
  }

  /** Returns true if field base64image is set (has been assigned a value) and false otherwise */
  public boolean isSetBase64image() {
    return this.base64image != null;
  }

  public void setBase64imageIsSet(boolean value) {
    if (!value) {
      this.base64image = null;
    }
  }

  public int getId() {
    return this.id;
  }

  public Weiguijilu setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case CREATETIME:
      if (value == null) {
        unsetCreatetime();
      } else {
        setCreatetime((java.lang.String)value);
      }
      break;

    case PERSON_NAME:
      if (value == null) {
        unsetPersonName();
      } else {
        setPersonName((java.lang.String)value);
      }
      break;

    case CPH:
      if (value == null) {
        unsetCph();
      } else {
        setCph((java.lang.String)value);
      }
      break;

    case BASE64IMAGE:
      if (value == null) {
        unsetBase64image();
      } else {
        setBase64image((java.lang.String)value);
      }
      break;

    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case CREATETIME:
      return getCreatetime();

    case PERSON_NAME:
      return getPersonName();

    case CPH:
      return getCph();

    case BASE64IMAGE:
      return getBase64image();

    case ID:
      return getId();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case CREATETIME:
      return isSetCreatetime();
    case PERSON_NAME:
      return isSetPersonName();
    case CPH:
      return isSetCph();
    case BASE64IMAGE:
      return isSetBase64image();
    case ID:
      return isSetId();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Weiguijilu)
      return this.equals((Weiguijilu)that);
    return false;
  }

  public boolean equals(Weiguijilu that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_createtime = true && this.isSetCreatetime();
    boolean that_present_createtime = true && that.isSetCreatetime();
    if (this_present_createtime || that_present_createtime) {
      if (!(this_present_createtime && that_present_createtime))
        return false;
      if (!this.createtime.equals(that.createtime))
        return false;
    }

    boolean this_present_personName = true && this.isSetPersonName();
    boolean that_present_personName = true && that.isSetPersonName();
    if (this_present_personName || that_present_personName) {
      if (!(this_present_personName && that_present_personName))
        return false;
      if (!this.personName.equals(that.personName))
        return false;
    }

    boolean this_present_cph = true && this.isSetCph();
    boolean that_present_cph = true && that.isSetCph();
    if (this_present_cph || that_present_cph) {
      if (!(this_present_cph && that_present_cph))
        return false;
      if (!this.cph.equals(that.cph))
        return false;
    }

    boolean this_present_base64image = true && this.isSetBase64image();
    boolean that_present_base64image = true && that.isSetBase64image();
    if (this_present_base64image || that_present_base64image) {
      if (!(this_present_base64image && that_present_base64image))
        return false;
      if (!this.base64image.equals(that.base64image))
        return false;
    }

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetCreatetime()) ? 131071 : 524287);
    if (isSetCreatetime())
      hashCode = hashCode * 8191 + createtime.hashCode();

    hashCode = hashCode * 8191 + ((isSetPersonName()) ? 131071 : 524287);
    if (isSetPersonName())
      hashCode = hashCode * 8191 + personName.hashCode();

    hashCode = hashCode * 8191 + ((isSetCph()) ? 131071 : 524287);
    if (isSetCph())
      hashCode = hashCode * 8191 + cph.hashCode();

    hashCode = hashCode * 8191 + ((isSetBase64image()) ? 131071 : 524287);
    if (isSetBase64image())
      hashCode = hashCode * 8191 + base64image.hashCode();

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id;

    return hashCode;
  }

  @Override
  public int compareTo(Weiguijilu other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetCreatetime()).compareTo(other.isSetCreatetime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatetime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createtime, other.createtime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPersonName()).compareTo(other.isSetPersonName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPersonName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.personName, other.personName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCph()).compareTo(other.isSetCph());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCph()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cph, other.cph);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBase64image()).compareTo(other.isSetBase64image());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBase64image()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.base64image, other.base64image);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Weiguijilu(");
    boolean first = true;

    if (isSetCreatetime()) {
      sb.append("createtime:");
      if (this.createtime == null) {
        sb.append("null");
      } else {
        sb.append(this.createtime);
      }
      first = false;
    }
    if (isSetPersonName()) {
      if (!first) sb.append(", ");
      sb.append("personName:");
      if (this.personName == null) {
        sb.append("null");
      } else {
        sb.append(this.personName);
      }
      first = false;
    }
    if (isSetCph()) {
      if (!first) sb.append(", ");
      sb.append("cph:");
      if (this.cph == null) {
        sb.append("null");
      } else {
        sb.append(this.cph);
      }
      first = false;
    }
    if (isSetBase64image()) {
      if (!first) sb.append(", ");
      sb.append("base64image:");
      if (this.base64image == null) {
        sb.append("null");
      } else {
        sb.append(this.base64image);
      }
      first = false;
    }
    if (isSetId()) {
      if (!first) sb.append(", ");
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class WeiguijiluStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WeiguijiluStandardScheme getScheme() {
      return new WeiguijiluStandardScheme();
    }
  }

  private static class WeiguijiluStandardScheme extends org.apache.thrift.scheme.StandardScheme<Weiguijilu> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Weiguijilu struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CREATETIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createtime = iprot.readString();
              struct.setCreatetimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PERSON_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.personName = iprot.readString();
              struct.setPersonNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CPH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cph = iprot.readString();
              struct.setCphIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // BASE64IMAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.base64image = iprot.readString();
              struct.setBase64imageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Weiguijilu struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.createtime != null) {
        if (struct.isSetCreatetime()) {
          oprot.writeFieldBegin(CREATETIME_FIELD_DESC);
          oprot.writeString(struct.createtime);
          oprot.writeFieldEnd();
        }
      }
      if (struct.personName != null) {
        if (struct.isSetPersonName()) {
          oprot.writeFieldBegin(PERSON_NAME_FIELD_DESC);
          oprot.writeString(struct.personName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cph != null) {
        if (struct.isSetCph()) {
          oprot.writeFieldBegin(CPH_FIELD_DESC);
          oprot.writeString(struct.cph);
          oprot.writeFieldEnd();
        }
      }
      if (struct.base64image != null) {
        if (struct.isSetBase64image()) {
          oprot.writeFieldBegin(BASE64IMAGE_FIELD_DESC);
          oprot.writeString(struct.base64image);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI32(struct.id);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class WeiguijiluTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WeiguijiluTupleScheme getScheme() {
      return new WeiguijiluTupleScheme();
    }
  }

  private static class WeiguijiluTupleScheme extends org.apache.thrift.scheme.TupleScheme<Weiguijilu> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Weiguijilu struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetCreatetime()) {
        optionals.set(0);
      }
      if (struct.isSetPersonName()) {
        optionals.set(1);
      }
      if (struct.isSetCph()) {
        optionals.set(2);
      }
      if (struct.isSetBase64image()) {
        optionals.set(3);
      }
      if (struct.isSetId()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetCreatetime()) {
        oprot.writeString(struct.createtime);
      }
      if (struct.isSetPersonName()) {
        oprot.writeString(struct.personName);
      }
      if (struct.isSetCph()) {
        oprot.writeString(struct.cph);
      }
      if (struct.isSetBase64image()) {
        oprot.writeString(struct.base64image);
      }
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Weiguijilu struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.createtime = iprot.readString();
        struct.setCreatetimeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.personName = iprot.readString();
        struct.setPersonNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.cph = iprot.readString();
        struct.setCphIsSet(true);
      }
      if (incoming.get(3)) {
        struct.base64image = iprot.readString();
        struct.setBase64imageIsSet(true);
      }
      if (incoming.get(4)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

